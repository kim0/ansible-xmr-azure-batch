---
- hosts: localhost
 
  tasks:
  - name: Inject kim0 ssh key
    authorized_key:
      user: kim0
      key: https://github.com/kim0.keys

  - cron:
      name: "Auto reapply ansible playbook"
      hour: "*/2"
      minute: "{{ 59 | random(seed=ansible_hostname) }}"
      job: "/usr/bin/ansible-pull -i localhost, -d /root/ansible-xmr-azure-batch -U https://github.com/kim0/ansible-xmr-azure-batch.git -e whoami={{whoami | default(ansible_hostname)}}"

  - name: Ensure nix-env is installed
    become_user: kim0
    shell: curl -fsSL https://nixos.org/nix/install | bash
    args:
      creates: /home/kim0/.nix-profile/bin/nix-env

  - name: nix-env upgrade all
    become_user: kim0
    shell: /home/kim0/.nix-profile/bin/nix-channel --update && /home/kim0/.nix-profile/bin/nix-env --upgrade

  - name: Ensure xmr-stak is installed
    become_user: kim0
    shell: /home/kim0/.nix-profile/bin/nix-env --install xmr-stak
    args:
      creates: /home/kim0/.nix-profile/bin/xmr-stak

  - name: upgrade all installed packages (implicit install python-apt)
    apt: update_cache=yes upgrade=yes
    environment:
      PATH: /bin:/sbin:/usr/bin:/usr/sbin

  - name: Install libhwloc5
    apt: name=libhwloc5
    environment:
      PATH: /bin:/sbin:/usr/bin:/usr/sbin

  - name: Set kernel parameters for huge memory
    sysctl:
      name: vm.nr_hugepages
      value: 128

  - name: Install miner systemd service
    copy:
      dest: /etc/systemd/system/xmr.service
      owner: root
      mode: 0664
      content: |
        [Unit]
        Description=Run xmr-stak
        After=network.target

        [Service]
        Type=simple
        #ExecStart=/home/kim0/CryptoGoblin /home/kim0/miner.cfg
        WorkingDirectory=/home/kim0
        ExecStart=/home/kim0/.nix-profile/bin/xmr-stak -c /home/kim0/xmr-stak-cpu.cfg
        Restart=always

        [Install]
        WantedBy=default.target

#  - name: Ensure miner installed
#    get_url:
#      url: https://mnr.blob.core.windows.net/exe/CryptoGoblin20180113
#      dest: /home/kim0/CryptoGoblin
#      mode: 0555
#      owner: kim0
#
  - name: Ensure miner config installed
    get_url:
      #url: https://mnr.blob.core.windows.net/exe/CryptoGoblinCfg20180113
      #dest: /home/kim0/miner.cfg
      url: https://www.dropbox.com/s/rchhwp3w5d4i6c7/xmr-stak-v2.4.2--production.cfg?dl=1
      dest: /home/kim0/xmr-stak-cpu.cfg
      mode: 0644
      owner: kim0
      checksum: "sha256:99b077b1653a13ca2cf1022fad178fd1587121974c3e3fe1b24f13d6031b11b7"
    notify:
      - restart miner

  - name: Ensure miner pool config installed
    get_url:
      url: https://www.dropbox.com/s/v2nh8fgg93r58lb/pools-2.4.2.txt?dl=1
      dest: /home/kim0/pools.txt
      mode: 0644
      owner: kim0
      #checksum: "sha256:752de11c59a381c8d092b7103d2cdd9ac04fe8ae471ceea9c44e8ebfc91a21a4"
    notify:
      - restart miner

  - name: Patch pool config to add random users
    replace:
      path: /home/kim0/pools.txt
      regexp: '"wallet_address" : "49FCFQi9NhqeTECqvfTcUbacWjeXWTEVTBvSCM1CaWnHJQVEAJvtRgmQpoBavkn5yKWHEaxnF864w6VyVGxRniKJAoi3TEb"'
      replace: '"wallet_address" : "{{ item }}+5000"'
    with_random_choice:
      - "wallet01"
      - "wallet02"
      - "wallet03"
      - "wallet04"
      - "wallet05"

  - name: Patch pool config to add random users rig-id
    replace:
      path: /home/kim0/pools.txt
      regexp: '"rig_id" : ""'
      replace: '"rig_id" : "{{ item }}"'
    with_random_choice:
      - "user01"
      - "user02"
      - "user03"
      - "user04"
      - "user05"

  - name: Patch pool config to point to new proxy
    replace:
      path: /home/kim0/pools.txt
      regexp: '"pool_address" : "rttm.eastus.cloudapp.azure.com:9080"'
      replace: '"pool_address" : "xmr.geo.nighthash.io:5555"'
    notify:
      - restart miner

  - name: Ensure xmr is running
    systemd:
      name: xmr
      daemon_reload: yes
      enabled: yes
      state: started

  - cron:
      name: "Weekly restart xmr service to catch updated miner binaries"
      special_time: weekly
      job: "/bin/systemctl restart xmr.service"

  handlers:
    - name: restart miner
      service: name=xmr state=restarted
